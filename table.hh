#ifndef WX_TABLE_H
#define WX_TABLE_H

#include <stdlib.h>
#include <stdio.h>
#include <sql.h>
#include <sqlext.h>
#include <string>
#include <vector>
#include <assert.h>

/////////////////////////////////////////////////////////////////////////////////////////////////////
//row_t
//a row is a vector of strings
/////////////////////////////////////////////////////////////////////////////////////////////////////

struct row_t
{
  std::vector<std::string> col;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////
//column_t
//a column has a name and a SQL type
/////////////////////////////////////////////////////////////////////////////////////////////////////

struct column_t
{
  std::string name;
  SQLSMALLINT sqltype;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////
//table_t
//a table is a vector with rows, with column information (name, SQL type)
/////////////////////////////////////////////////////////////////////////////////////////////////////

class table_t
{
public:
  table_t()
  {

  }
  std::vector<column_t> cols;
  std::vector<row_t> rows;
  void remove();
  std::string get_row_col_value(int row, const std::string& col_name);

  int to_csv(const std::string& fname);
};


#endif
