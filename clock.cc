#include "clock.hh"
#ifdef _MSC_VER
#include <windows.h>
#endif
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <iostream>
#include <string>
#include <fstream>
#include <iomanip>

/////////////////////////////////////////////////////////////////////////////////////////////////////
//clock_gettime_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

clock_gettime_t::clock_gettime_t() :
  running(0)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//clock_gettime_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

void clock_gettime_t::start()
{
  if (!running)
  {
    get_clock_gettime(&begin);
    get_clock_gettime(&last);
    running = 1;
  }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//clock_gettime_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

void clock_gettime_t::stop()
{
  running = 0;
  get_clock_gettime(&begin);
  get_clock_gettime(&last);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//clock_gettime_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

void clock_gettime_t::now(const char* s)
{
  timespec tnow;
  get_clock_gettime(&tnow);
  double time_total = (double)(tnow.tv_sec - begin.tv_sec);
  double time_last = (double)(tnow.tv_sec - last.tv_sec);
  std::cout << std::setprecision(1) << std::fixed;
  if (s)
  {
    std::cout << s << ":\t";
  }
  std::cout << time_last << " seconds\t" << time_total << " total" << std::endl;
  last = tnow;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//clock_gettime_t
/////////////////////////////////////////////////////////////////////////////////////////////////////

int clock_gettime_t::get_clock_gettime(struct timespec *spec)
{
#ifdef _MSC_VER
  __int64 wintime;
  GetSystemTimeAsFileTime((FILETIME*)&wintime);
  wintime -= 116444736000000000i64; //1jan1601 to 1jan1970
  spec->tv_sec = wintime / 10000000i64; //seconds
  spec->tv_nsec = wintime % 10000000i64 * 100; //nano-seconds
#else
  clock_gettime(CLOCK_MONOTONIC, spec);
#endif
  return 0;
}



